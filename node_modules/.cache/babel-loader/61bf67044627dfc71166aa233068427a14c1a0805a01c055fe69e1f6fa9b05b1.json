{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    }).then(data => {\n      return data;\n    });\n  }\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  editProfile({\n    name,\n    about\n  }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this.headers.authorization,\n        \"Content-Type\": this.headers[\"Content-Type\"]\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  editProfilePicture({\n    linkEditProfilePic\n  }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this.headers.authorization,\n        \"Content-Type\": this.headers[\"Content-Type\"]\n      },\n      body: JSON.stringify({\n        avatar: linkEditProfilePic\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this.headers.authorization,\n        \"Content-Type\": this.headers[\"Content-Type\"]\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this.headers.authorization\n        // \"Content-Type\": this.headers[\"Content-Type\"],\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this.headers.authorization\n        // \"Content-Type\": this.headers[\"Content-Type\"],\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this.headers.authorization\n        // \"Content-Type\": this.headers[\"Content-Type\"],\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/web-ptbr-cohort-13\",\n  headers: {\n    authorization: \"4fe5fb1a-9a42-4631-9f7e-39eb49951a0f\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","getInitialCards","fetch","method","authorization","then","res","ok","json","Promise","reject","status","data","getUserInfo","editProfile","name","about","body","JSON","stringify","editProfilePicture","linkEditProfilePic","avatar","addCard","link","deleteCard","cardId","addLike","removeLike","api"],"sources":["/Users/biamsarmento/Documents/Tripleten/Sprint13/web_project_around_react/sprint13/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor({baseUrl, headers}) {\n      this.baseUrl = baseUrl;\n      this.headers = headers;\n    }\n  \n    getInitialCards() {\n      return fetch(`${this.baseUrl}/cards`, {\n        method: \"GET\",\n        headers: {\n          authorization: this.headers.authorization,\n        }\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        })\n        .then(data => {\n          return data;\n        });\n    }\n  \n    getUserInfo() {\n      return fetch(`${this.baseUrl}/users/me`, {\n        method: \"GET\",\n        headers: {\n          authorization: this.headers.authorization,\n        }\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n  \n    editProfile({name, about}) {\n      return fetch(`${this.baseUrl}/users/me`, {\n        method: \"PATCH\",\n        headers: {\n          authorization: this.headers.authorization,\n          \"Content-Type\": this.headers[\"Content-Type\"],\n        },\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n  \n    editProfilePicture({linkEditProfilePic}) {\n      return fetch(`${this.baseUrl}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: {\n          authorization: this.headers.authorization,\n          \"Content-Type\": this.headers[\"Content-Type\"],\n        },\n        body: JSON.stringify({\n          avatar: linkEditProfilePic,\n        })\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n  \n    addCard({name, link}) {\n      return fetch(`${this.baseUrl}/cards`, {\n        method: \"POST\",\n        headers: {\n          authorization: this.headers.authorization,\n          \"Content-Type\": this.headers[\"Content-Type\"],\n        },\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n  \n    deleteCard(cardId) {\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this.headers.authorization,\n          // \"Content-Type\": this.headers[\"Content-Type\"],\n        }\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n  \n    addLike(cardId) {\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this.headers.authorization,\n          // \"Content-Type\": this.headers[\"Content-Type\"],\n        }\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n  \n    removeLike(cardId) {\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this.headers.authorization,\n          // \"Content-Type\": this.headers[\"Content-Type\"],\n        }\n      })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            return Promise.reject(`Error: ${res.status}`);\n          }\n        });\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/web-ptbr-cohort-13\",\n    headers: {\n      authorization: \"4fe5fb1a-9a42-4631-9f7e-39eb49951a0f\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}